resource.undefined=Resource ''{0}'' is not defined
resource.ambiguous=Path ''{0}'' is matched by both resources ''{1}'' and ''{2}''
action.undefined=Action {1} is not defined on {0}
protocol.undefined=Protocol {1} is not defined on {0}
baseUri.unmatched=Request URL {0} does not match base URI {1}
responseCode.undefined=Response({1}) is not defined on {0}
contentType.missing=No Content-Type header given
contentType.mismatch=Response Content-Type ''{1}'' is not compatible with Accept header ''{0}''
mediaType.undefined=Media type ''{1}'' is not defined on {0}
body.superfluous=Body given but none defined on {0}
schemaValidator.missing=No SchemaValidator found for media type ''{1}'' on {0}
body.empty=Schema defined but empty body for media type ''{1}'' on {0}
schema.body.mismatch=Body does not match schema for {0}\nContent: {1}\nMessage: {2}
schema.example.mismatch=Example does not match schema for {0}\nContent: {1}\nMessage: {2}
schema.superfluous=No schema allowed on {0}
formParameters.missing=No formParameters given on {0}
accept.header=Accept header
mediaType.illegal=Illegal media type ''{1}'' in {0}: {2}
mediaType.ambiguous=Ambiguous definition: {1} and also {2} used on {0}
mediaType.better=Given the Accept header ''{1}'', the response to {0} should have media type ''{2}'', not ''{3}''
mediaType.empty=Must not be empty
mediaType.noSlash=Does not contain ''/''
mediaType.noSubtype=Does not contain subtype after ''/''
mediaType.wildcard.illegal=Wildcard type is legal only in ''*/*'' (all mime types)
mediaType.quality.illegal=Invalid quality value ''{0}'': Should be a number between 0.0 and 1.0
queryParam=Query parameter ''{1}'' on {0} {2}
formParam=Form parameter ''{1}'' on {0} {2}
headerParam=Header ''{1}'' on {0} {2}
baseUriParam=BaseUri parameter ''{1}'' on {0} {2}
uriParam=URI parameter ''{1}'' on {0} {2}
undefined=is not defined
repeat.superfluous=is not repeat but found repeatedly
required.missing=is required but not found
value=- Value ''{0}'' {1}
value10=- Value ''{0}'': {1}
value.empty=is only allowed with type string
boolean.invalid=is not a valid boolean
date.invalid=is not a valid date
integer.invalid=is not a valid integer
number.invalid=is not a valid number
file.invalid=is not a file
file.superfluous=is a file but not defined as {0}
enum.invalid=is not a member of enum ''{0}''
pattern.invalid=does not match pattern ''{0}''
length.tooSmall=is shorter than minimum length {0}
length.tooBig=is longer than maximum length {0}
value.tooSmall=is smaller than minimum {0}
value.tooBig=is bigger than maximum {0}
action=action({0} {1})
resource=resource({0})
mimeType=mime-type(''{0}'')
response=response({0})
scheme=Assuming security scheme ''{0}'': {1}
charset.invalid=Unknown charset {0}
jsonSchemaValidator.schema.invalid=Schema invalid: {0}
javaXmlSchemaValidator.schema.fatal=Fatal error in line {0}:{1} {2}
javaXmlSchemaValidator.schema.error=Error in line {0}:{1} {2}
javaXmlSchemaValidator.schema.warn=Warning in line {0}:{1} {2}
usage.RESOURCE=Unused resources
usage.ACTION=Unused actions
usage.QUERY_PARAMETER=Unused query parameters
usage.FORM_PARAMETER=Unused form parameters
usage.REQUEST_HEADER=Unused request headers
usage.RESPONSE_HEADER=Unused response headers
usage.RESPONSE_CODE=Unused response codes
oauth10.requestTokenUri.missing=Missing property ''requestTokenUri'' for OAuth 1.0
oauth10.authorizationUri.missing=Missing property ''authorizationUri'' for OAuth 1.0
oauth10.tokenCredentialsUri.missing=Missing property ''tokenCredentialsUri'' for OAuth 1.0
oauth20.authorizationUri.missing=Missing property ''authorizationUri'' for OAuth 2.0
oauth20.accessTokenUri.missing=Missing property ''accessTokenUri'' for OAuth 2.0
oauth20.authorizationGrants.missing=Missing property ''authorizationGrants'' for OAuth 2.0
oauth20.authorizationGrant.invalid=Invalid authorizationGrant: ''{0}''
checking.exception=Exception during RAML check: {0}
baseUriParameters.illegal=No baseUri is given, therefore baseUriParameters are not allowed in {0}
baseUriParameter.illegal=baseUriParameter with name ''{1}'' is not allowed in {0}
baseUriParameter.invalid=The baseUri has no variable ''{1}'' in {0}
uriParameter.illegal=uriParameter with name ''{1}'' is not allowed in {0}
uriParameter.invalid=The uri has no variable ''{1}'' in {0}
resource.name.invalid=Name of {0} does not match pattern ''{1}''
parameter.name.invalid={2} name ''{1}'' in {0} does not match pattern ''{3}''
header.name.invalid=header name ''{1}'' in {0} does not match pattern ''{2}''
root=Root definition
description.missing={0} has no description
documentation.missing={0} has no documentation
documentation.missing.title={0} has documentation with missing title
documentation.missing.content={0} has documentation with missing content
parameter.description.missing={2} ''{1}'' in {0} has no description
parameter.condition={3} of {2} ''{1}'' in {0} {4}
formParameter.illegal=No formParameter allowed in {0} (only allowed with ''application/x-www-form-urlencoded'' or ''multipart/form-data'')
empty={0} is empty
schema.inline=Inline schema definition
schema=Schema ''{0}''
example=Example value
body=Body